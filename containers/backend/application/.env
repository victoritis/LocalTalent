SECRET_KEY=null   #Clave secreta de la aplicacion usada para firmar cookies y tokens JWT.
FLASK_APP=httpApp.py  #Archivo principal de la aplicacion Flask
DATABASE_URL=null  #URL a la base de datos de la aplicacion, en formato postgresql+psycopg2://usuario:contraseña@host:puerto/nombre_base_datos
# Ejemplo: postgresql+psycopg2://admin:admin_pass@database:5432/tfg_bbdd
#Usar valores asignados al env.local de la database
FLASK_ENV=development  #Entorno de ejecucion de Flask
DEBUG=True  #Habilita modo debug para desarrollo
JWT_SECRET_KEY=null  #Clave secreta para firmar tokens JWT
PYTHONUNBUFFERED=1  #Evita el buffering en la salida de Python

############################### MAIL CONFIGURATION #############################

#Por defecto se usa mailpit, cambiar valores para configurar servidor real.
MAIL_SERVER=mailpit
MAIL_PORT=1025
MAIL_USE_TLS=False
MAIL_USE_SSL=False
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_DEBUG=1
MAIL_DEFAULT_SENDER=no-reply@cvesentinel.csa.es

###############################################################################################

##################################### WORKERS CONFIGURATION #############################

REDIS_URL=redis://redis:6379/0  #URL de conexion a Redis
CELERY_BROKER_URL=redis://redis:6379/0  #URL del broker para Celery

###############################################################################################

######################################### NVD CONFIGURATION #############################

NVD_URL_CVE=https://services.nvd.nist.gov/rest/json/cves/2.0
NVD_URL_CPE=https://services.nvd.nist.gov/rest/json/cpes/2.0
NVD_URL_MATCH=https://services.nvd.nist.gov/rest/json/cpematch/2.0
#Hay que configurar la clave de API de NIST para acceder a los servicios de NVD.
# Puedes obtener una clave de API gratuita en https://nvd.nist.gov/developers/vulnerabilities
NIST_API_KEY=

###############################################################################################

############################### FRONTEND CONFIGURATION #############################

FRONTEND_BASE_URL=https://localtalent.es

#################################### ADMIN AUTHENTICATION ####################################

ADMIN_FIRST_NAME=Super
ADMIN_LAST_NAME=Admin
ADMIN_PASSWORD=admin1
ADMIN_EMAIL=admin1@example.com
ADMIN_OTP_SECRET=JBSWY3DPEHPK3PXP

##################################################################################################

################################# CONFIGURATION FOR COOKIES #############################

# Configuración de Cookies de Sesión para desarrollo con subdominios
SESSION_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE='Lax'
# Para que la cookie funcione en cve-sentinel.csa.es y api.cve-sentinel.csa.es
SESSION_COOKIE_DOMAIN=cve-sentinel.csa.es

#######################################################################################

############################# TESTING CONFIGURATION #############################

# --- Variables para Test ---
# Asumiendo que tu frontend corre en el puerto 5173 de tu localhost durante el desarrollo/test
# Esta es la URL que el NAVEGADOR DEL USUARIO usará para acceder al frontend.
FRONTEND_BASE_URL_TEST=http://frontend:5173

# Dirección de email remitente para los correos enviados durante los tests.
# Puede ser ficticia, pero reconocible para tests.
MAIL_DEFAULT_SENDER_TEST=test-no-reply@cvesentinel.com

# URI de la base de datos de test.
# 'database' es el nombre del servicio de tu base de datos en Docker Compose.
# 'tfg_bbdd_test' es el nombre de la base de datos de test.
SQLALCHEMY_DATABASE_URI_TEST=postgresql+psycopg2://admin:admin_pass@database:5432/tfg_bbdd_test

#################################################################################
